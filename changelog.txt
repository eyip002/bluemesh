21 September 2008
Changed CircuitComponent.as to Component.as to better describe the generic use of CircuitComponents.
When hovering over Connection Sites, the associated component does not highlight, so it is less distracting to the user.

20 Setptember 2008
Commenting code.  Cleaned up some unused functions and variables.

15 September 2008
Images are now scaled to component size.  Hence, components are now completely resolution independent.
Changing grid size on the fly is too hard.  Too many objects to resize and redraw.
Renaming "circuit" Area/size/width/height to "drawing".

7 September 2008
All wires delete when a component is deleted.

6 September 2008
Bug where wires draw across a connector.  Flipped or straight wires.
Wires should be able to be repositioned.  Replayed circuits have messy wires.

5 September 2008
Changed all references of menuBar to toolBar.  Found a free font to use: Vera by Bitstream.
Bug occurs when clicking on a dragObject positions the mouse outside of the movieclip so an onRelease event never happens.  Found to be because of the vertical alignment of component labels.
Wires do not react to mouse hovers when the editor is not in edit mode.

4 September 2008
Changed menu bar buttons to more useable names and functions.
Added in clear mode.
Fixed bug in replay functionality where components created were not pushed into the circuitComponentLibrary.componentList array.  Was being pushed into a depreciated array.
Input boxes for tabbed panels have to be made last because of depth problems.

3 September 2008
Started removing development embellishments.  Added useable circuit symbols.  Symbols are to correct proportions and connectors appear at the correct places
Can set variables in the flash applet using javascript.
Can dynamically load a saved XML netlist.  Uses replay functionality.  Bug occurs when copies of component types used appear at (0, 0).

2 September 2008
Lots of things added in.  Boolean and analog mode.

21 August 2008
Corrected create() netlist generation to display 'connectors' instead of 'Connector'.

14 August 2008
Format of originalNetList and originalNets has changed.
Replay components() and wires() now work.  Wires are drawn using the originalNets XML.  Components redrawn are mapped to the original component names in the netlist.

13 August 2008
DragObjects has a _value variable to keep electrical values.
Electrical values on DragObjects can now be changed in the editing mode.

12 August 2008
Fixed bug where turning off edit mode does not deselect the active dragObject.
Connector names are dynamically generated and depend on the name of the dragObject.

3 August 2008
Components are now instantiated relative to the active grid in terms of [row, col].
Bug when you create multiple components of the same type.  If you move one of the components away, then the remaining components do not occupy the grid.
Connector links are now recognised by the replay function.
Created new FlashVar teacherMode which is used for deciding what applet features are available.
Changed function names of getName and getConnections to name and connected in Wire and Connector classes.
Buttons can now be toggled so they can enter an active state.
Implemented an editing mode that only allows components to be selected/highlighted.
DragObjects can now be toggled during editing mode.  This will be used for implementing the changing of component's electrical values.

1 August 2008
Adapted XMLParser to be able to load XML strings rather than from a file or url.
Wrote a simple XML dom tree walker.
Started making the Replay class.  Issues exist with IE in that the Flash applet unable to call the JavaScript functions until after the applet has initialised.  Components can be created but their positions are absolute.  A replay panel is created as a temporary solution to automate component creation.

31 July 2008
Added a "read in" button that pops up the contents of the _originalNetList FlashVar.
Added a designation for inputs by adding 0.1 to the connections array.  Inputs are now red and outputs are green.
Resized some of the buttons.

29 July 2008
Got OASIS to transfer a value to a textarea and input box.  The OASIS raw editor fails to parse the html for a textarea properly.  Everything starting from the </textarea> tag gets stripped out of qtemplate.
Can now send the original netlist to the flash applet through FlashVars.

28 July 2008
Fixed overlapping bug.  Redraw() function was not being called at the end of the onEvent() function for circuitComponent.
Fixed bug where multiple buttons on a single tabbedPane wasn't being updated consistently and the mouse cursor was being eratic when mousing over previously created buttons.

27 July 2008
Applet gets FlashVars from html. Can load and show the text in the infoBox.

22 July 2008
Successfully changed all references to Utility.DelegateFD and use of strong typing.
Bug found: Components can overlap.  Probably a problem with the occupancy of the circuit grid.

20 July 2008
Jeffrey is working on netlist generation.  Using XML to describe the nets.
Found an open source XML parser @ http://blog.greensock.com/xmlparseras2/
Using DelegateFD instead of the Delegate class that comes with Flash mx for proprietary reasons.

19 July 2008
Circuit editor can make calls to javascript without the security warning popping up.
Circuit editor tested under Safari 3.1.2, IE 7.0.0.5730.11 & 8.0 beta1, FireFox 2.0.14 & 3.0.
FireFox 3.0 under Mac has the annoying behaviour of redrawing the applet as a white canvas whenever a dialog box shows.

17 July 2008
Merged Jeffrey and Eugene's progress.
Wires can be drawn by clicking connection sites.  have abandoned pathfinding for automatic routing.
Wires are repositioned after components are dragged around.
Each connection is made of two wires.
Noticed a bug where flash 6 draws borders without offsetting the attached movie.


14 July 2008
Added title bars to panels. Repositioning of elements is done automatically (dynamic manner).

13 July 2008
Reworked the way input boxes are created.  It can now be added to a tab by using a static function in GDraw.
Input boxes are created in the panel layer rather than the _root.
Repositioned the text inside the buttons.
Optimised the passing of mouse events to child movieclips in tabbedPanel.


12 July 2008
Can generate a list of components to an html div element.
Created the ability to create an input box in a tab and output the contents to the infoBox when a button is pressed.  Created a new class to handle the creation.
Input boxes are created in the _root layer because the tab layer does not pass the mouse events to its buttons or input boxes which is required for entering into the box.
Labels are no longer redrawn in every redraw().

11 July 2008
Tabs have been implemented quite well.  Tabs are contained within panels.  Can change to different tabs.  Buttons are deactivated on unselected tabs.
Strange behaviour with pushing objects into instance array variables.  All objects seem to use the same instance variable (even though it is not a static variable).  Requires the use of 'new' variable creation.
Unselected tabs are highlighted on roll over.
Added menubar styling.
Changed the creation of panels so that they are laid out in a "liquid" manner.
Added labelling of tabs.
Added textFields to tabs.

10 July 2008
Fixed problem where successive components would overwrite the connector properties of previous components.  Used new Array() rather than [].
Can select individual points and remember it.
Did a merge.
Draw squares with wires.  Still a bit slow.
Can occupy and unoccupy grid squares when dragging and deleting components.
Fixed bug where the dragObject's own occupancy on the grid prevents it from making a valid shift to an adjacent cell.


09 July 2008
Re-implemented the connection points as individual movieclips.  These are created within dragObject.  There is a caveat in AS2 where mouse events do not get passed onto child movie clips.  The parent clip always takes the event.

08 July 2008
Can now set focus to dragObjects.
Can now delete focused dragObjects with backspace or delete keys.
Simplified the use of images to depict components by changing the alpha of the movie clip.  Only requires one image rather than three.
Created JavaScript hooks with fscommand. IE requires Visual Basic to catch the fscommand call.


07 July 2008
Can now make multiple Mosfet components.
Fixed hitTest bug.  Components will ignore tests with itself.
Added to connection site implementation.  Now works for any sized component with a defined connections array.
Dragging boundaries are dynamically set for each component.
Grid area is only occupied if a component is dropped onto a clear area.

06 July 2008
Improved method of reference components.  Reference by walking the object tree or movie clip layers.
Components are created with a reference to the activeGrid during creation.
Snap grid is no longer hard coded in dragObject.
Deleted unnecessary variables in CircuitComponents.  Should not need to keep its onscreen location.
DragObject no longer calculates mouse position when dropping object.  Uses position information from activeGrid.
Performance improvements.
Selected grid is now a moving movieclip which changes visibility when the mouse hovers in/out of the grid.
Merged Jeffrey and Eugene's work.
Complete overhaul of CircuitComponent, CircuitComponentLibrary and DragObject.  CircuitComponent now inherits DragObject properly.  This was required as it was foreseeable that references to DragObject would become too complex.  Before, a DragObject was created inside CircuitComponent.  Allows absolute control of mouse events and instance variables of DragObject in CircuitComponent.



May 2008
Replaced thick with thickness
filledRect uses nonFilledRect
Grid does not need to extend MovieClip

Grid is now an overlay for Panel.
Current grid does not persist when the mouse moves out of the Grid.
Removed " + dimensions.x" and " + dimensions.y" calculations from as many of the Grid functions to make things relative to top left hand corner.
Assumed currentSquare on first instance is at top left hand corner since selected square is only drawn on mouse move.
Grid now extends MovieClip as it no longer needs to create a MovieClip inside of itself.
Performance is up.
Row / column one squares no longer selected if the mouse moves along row / column -one.
getCurrentSquare returns [null, null] if the mouse is outside of the grid.

Simplified Grid calculations even further by using this._xmouse and this._ymouse for relativity.
CircuitComponents uses occupiedGrid.